{"mappings":"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","sources":["<anon>","src/components/authComponent.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirefc44\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirefc44\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $800sp = parcelRequire(\"800sp\");\nclass $4833ea2eb086989b$var$AuthComponent extends (0, $800sp.LitElement) {\n    constructor(){\n        super();\n        this.userIsAuthorized = false;\n        this.userName = \"\";\n    }\n    static get properties() {\n        return {\n            userIsAuthorized: {\n                type: Boolean,\n                attribute: false\n            },\n            userName: {\n                type: String,\n                attribute: false\n            }\n        };\n    }\n    static get styles() {\n        return (0, $800sp.css)`\n      :host {\n        display: block;\n      }\n\n      .text--signed-in {\n        color: #fff;\n      }\n\n      summary:hover {\n        cursor: pointer;\n      }\n\n      .button__dialog--close {\n        position: absolute;\n        right: .5rem;\n        top: .5rem;\n        padding: 0 !important;\n      }\n\n      .dialog__btn--close {\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        background-image: url('../close.svg');\n      }\n    `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        const userAuthorizedData = sessionStorage.getItem(\"authorized-user\");\n        if (userAuthorizedData === null || userAuthorizedData == \"false\") this.userIsAuthorized = false;\n        else {\n            this.userIsAuthorized = true;\n            this.userEmail = userAuthorizedData;\n        }\n    }\n    render() {\n        return (0, $800sp.html)`\n      <link rel=\"stylesheet\" href=\"/index.css\">\n      ${!this.userIsAuthorized ? (0, $800sp.html)`\n        <button @click=\"${this.openSignInForm}\">Sign In</button>\n        <dialog id=\"dialog__sign-in\">\n          <button title=\"close dialog\" @click=\"${this.closeSignInForm}\" class=\"icon button__dialog--close\">\n            <div class=\"icon__wrap\">\n              <span class=\"dialog__btn--close\"></span>\n            </div>\n          </button>\n          <form @submit=\"${this.formSubmissionHandler}\"  id=\"form__sign-in\">\n            <div class=\"input-wrap\">\n              <label>Email</label>\n              <input type=\"text\" name=\"email\" id=\"email\" autocomplete=\"email\">\n            </div>\n            <div class=\"input-wrap\">\n              <label>Password</label>\n              <input type=\"password\" name=\"password\" id=\"password\" autocomplete=\"current-password\">\n            </div>\n            <button type=\"submit\">Log In</button>\n          </form>\n        </dialog>\n      ` : (0, $800sp.html)`<span class=\"text--signed-in\"><i>Signed in as: </i>${this.userName}</span><button @click=\"${this.signOutUserHandler}\">Sign Out</button>`}\n    `;\n    }\n    async formSubmissionHandler(e) {\n        e.preventDefault();\n        const email = this.shadowRoot.querySelector(\"#email\").value;\n        const password = this.shadowRoot.querySelector(\"#password\").value;\n        try {\n            const response = await fetch(\"/api/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            });\n            if (response.ok) {\n                const data = await response.json();\n                sessionStorage.setItem(\"authorized-user\", email);\n                this.userIsAuthorized = true;\n                this.userEmail = email;\n                this.userName = data.name;\n                console.log(data, this.userName);\n                document.dispatchEvent(new CustomEvent(\"auth-state\", {\n                    bubbles: true,\n                    detail: this.userIsAuthorized\n                }));\n            } else alert(\"Invalid email or password\");\n        } catch (error) {\n            console.error(\"Error: \", error);\n        }\n    }\n    signOutUserHandler() {\n        sessionStorage.setItem(\"authorized-user\", false);\n        this.userIsAuthorized = false;\n        document.dispatchEvent(new CustomEvent(\"auth-state\", {\n            bubbles: true,\n            detail: this.userIsAuthorized\n        }));\n    }\n    openSignInForm() {\n        const dialog = this.shadowRoot.querySelector(\"#dialog__sign-in\");\n        dialog.showModal();\n    }\n    closeSignInForm() {\n        const dialog = this.shadowRoot.querySelector(\"#dialog__sign-in\");\n        dialog.close();\n        const form = this.shadowRoot.querySelector(\"#form__sign-in\");\n        form.reset();\n    }\n}\ncustomElements.define(\"auth-component\", $4833ea2eb086989b$var$AuthComponent);\n\n\n//# sourceMappingURL=news.b3e268d2.js.map\n","import { LitElement, html, css } from \"lit\";\n\n\nclass AuthComponent extends LitElement {\n  constructor() {\n    super();\n\n    this.userIsAuthorized = false;\n    this.userName = '';\n  }\n\n  static get properties() {\n    return {\n      userIsAuthorized: { type: Boolean, attribute: false },\n      userName: { type: String, attribute: false}\n    }\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n\n      .text--signed-in {\n        color: #fff;\n      }\n\n      summary:hover {\n        cursor: pointer;\n      }\n\n      .button__dialog--close {\n        position: absolute;\n        right: .5rem;\n        top: .5rem;\n        padding: 0 !important;\n      }\n\n      .dialog__btn--close {\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        background-image: url('../close.svg');\n      }\n    `\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const userAuthorizedData = sessionStorage.getItem('authorized-user');\n    if (userAuthorizedData === null || userAuthorizedData == 'false') {\n      this.userIsAuthorized = false;\n    } else {\n      this.userIsAuthorized = true;\n      this.userEmail = userAuthorizedData;\n    }\n  }\n\n  render() {\n    return html`\n      <link rel=\"stylesheet\" href=\"/index.css\">\n      ${!this.userIsAuthorized ? html`\n        <button @click=\"${this.openSignInForm}\">Sign In</button>\n        <dialog id=\"dialog__sign-in\">\n          <button title=\"close dialog\" @click=\"${this.closeSignInForm}\" class=\"icon button__dialog--close\">\n            <div class=\"icon__wrap\">\n              <span class=\"dialog__btn--close\"></span>\n            </div>\n          </button>\n          <form @submit=\"${this.formSubmissionHandler}\"  id=\"form__sign-in\">\n            <div class=\"input-wrap\">\n              <label>Email</label>\n              <input type=\"text\" name=\"email\" id=\"email\" autocomplete=\"email\">\n            </div>\n            <div class=\"input-wrap\">\n              <label>Password</label>\n              <input type=\"password\" name=\"password\" id=\"password\" autocomplete=\"current-password\">\n            </div>\n            <button type=\"submit\">Log In</button>\n          </form>\n        </dialog>\n      `: html`<span class=\"text--signed-in\"><i>Signed in as: </i>${this.userName}</span><button @click=\"${this.signOutUserHandler}\">Sign Out</button>`\n      }\n    `;\n  }\n\n\n  async formSubmissionHandler(e) {\n    e.preventDefault();\n    const email =  this.shadowRoot.querySelector('#email').value;\n    const password = this.shadowRoot.querySelector('#password').value;\n\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({email, password}),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        sessionStorage.setItem('authorized-user', email);\n        this.userIsAuthorized = true;\n        this.userEmail = email;\n        this.userName = data.name;\n        console.log(data, this.userName);\n        document.dispatchEvent(new CustomEvent('auth-state', {bubbles: true, detail: this.userIsAuthorized}));\n      } else {\n        alert('Invalid email or password');\n      }\n    } catch (error) {\n      console.error('Error: ', error);\n    }\n  }\n\n  signOutUserHandler() {\n    sessionStorage.setItem('authorized-user', false);\n    this.userIsAuthorized = false;\n    document.dispatchEvent(new CustomEvent('auth-state', {bubbles: true, detail: this.userIsAuthorized}));\n  }\n\n  openSignInForm() {\n    const dialog = this.shadowRoot.querySelector('#dialog__sign-in');\n    dialog.showModal();\n  }\n\n  closeSignInForm() {\n    const dialog = this.shadowRoot.querySelector('#dialog__sign-in');\n    dialog.close();\n\n    const form = this.shadowRoot.querySelector('#form__sign-in');\n    form.reset();\n  }\n}\n\ncustomElements.define('auth-component', AuthComponent);"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$800sp","$4833ea2eb086989b$var$AuthComponent","LitElement","constructor","userIsAuthorized","userName","properties","type","Boolean","attribute","String","styles","css","connectedCallback","userAuthorizedData","sessionStorage","getItem","userEmail","render","html","signOutUserHandler","openSignInForm","closeSignInForm","formSubmissionHandler","e","preventDefault","email","shadowRoot","querySelector","value","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","setItem","name","console","log","document","dispatchEvent","CustomEvent","bubbles","detail","alert","error","dialog","showModal","close","form","reset","customElements","define"],"version":3,"file":"news.b3e268d2.js.map"}